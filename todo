. .
. . + .
	.

. . 
	.
	. . . 
.
.  .
investigate sanity of how youre showing views (in memory)
	. . . 

game state object
. . .
calculate how much to give to each player
refactor?
send state to /admin on every move

server gives starter points at the beginning of each round
and we see that + bank in the UI 

	make a simple bot that connects (!) at servers bequest
	see this in the admin panel
	i want to see its moves and watch the game state
	


	lets make conditions
	lets make bot brains
		bots are a prototypical series of actions
		 	'brains' are gaussian distributions

	a header ('id/station/bank') + 'points' in this round
	a 'join' view / routine 
"start game" from admin 
	entrust amount should be a number dial
something interesting about when to display heightened heartrates
remember to stop the game after `n` rounds


refactor
validate user inputs
	ajax to check id uniquness  on  join
	'entrust amount' should be w/i range
	'entrust nothing' 



order some arduino parts



survey is part of this:
	ONE object with all the questions
	yields form AND schema for storing it

try tape
	http://www.macwright.org/2014/03/11/tape-is-cool.html
	https://github.com/substack/faucet

remember visions ->
	bots play turns, and a way to visualize that
	games is current state - old turns, save then forget them
	server emits a Start Game message




adminscreenspecs:
	[id] - [station] - [round #]
		[player:waiting..]
		[bot: {turn}]



game state:

	id: { 
		human:{bank, points, entrustTurn, cooperateDefectTurn, readyForNextRound}
		, computer:{bank, points, entrustTurn, cooperateDefectTurn, readyForNextRound} 
		, round: roundNum
		, station: stationNum
		, socket: socket 
	}



specs:

	ID / station / bank 

	total points == points in this round
	updates live

	total points -> bank after each round

	we want to know all their decisions
	including their bank

	for each round: 
			1 row:
				unique ID
				station #
				round #
				how much did i entrust
				how much did bot entrust
				did i c or d
				did bot c or d
				1/0 condition variables
				heartrate value
				bank value
				TIME beginning/end

	survey module in the same system (after everything)



the client/server API :  

	from server
		opponentReadyForNextTurn:
		opponentEntrustTurn:
			&decision: entrust
			&pointsEntrusted: 5
		roundSummary:
			summary: whatever whatever 
			bank: 50

	to server
		cooperateTurn:
			decision: cooperate
		entrustTurn:
			&decision: entrust
			&pointsEntrusted: 5
		readyForNextRound:

